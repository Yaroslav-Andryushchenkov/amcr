<?php
/**
 * @file
 * Make data from Adobe marketing cloud reports available if views
 *
 */

/**
 *Implements hook_menu().
 */
function amcr_menu() {
  $items['amcr'] = array(
    'title' => 'test page',
    'page callback' => 'amcr_test_page',
    'access callback' => TRUE,
    'expanded' => TRUE,
  );

  $items['admin/config/services/amcr'] = array(
    'title' => 'Adobe marketing cloud reports',
    'description' => "Configure connection to Adobe marketing cloud and edit reports parameters.",
    'page callback' => 'amcr_report_list',
    'access arguments' => array('administer amcr'),
    'weight' => 10,
    'file' => 'amcr.admin.inc',
  );
  $items['admin/config/services/amcr/add'] = array(
    'title' => 'Add report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('amcr_report_form'),
    'access arguments' => array('administer amcr'),
    'type' => MENU_LOCAL_ACTION,
    'file' => 'amcr.admin.inc',
  );

  $items['admin/config/services/amcr/remove/%amcr_report'] = array(
    'title' => 'Remove report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('amcr_admin_remove_report', 5),
    'access arguments' => array('administer amcr'),
    'file' => 'amcr.admin.inc',
  );
  $items['admin/config/services/amcr/edit/%amcr_report'] = array(
    'title' => 'Edit report',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('amcr_report_form', 5),
    'access arguments' => array('administer amcr'),
    'file' => 'amcr.admin.inc',
  );
  $items['admin/config/services/amcr/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/config/services/amcr/settings'] = array(
    'title' => 'Settings',
    'description' => 'Configure Adobe marketing cloud connection',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('amcr_admin_form'),
    'access arguments' => array('administer amcr'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'amcr.admin.inc',
  );

  return $items;
}


/**
 * Page callbac, form amcr menu item.
 */
function amcr_test_page() {
  _amcr_update_report(1);
  return 'Report completed';

}


/**
 * Implements hook_permission().
 */
function amcr_permission() {
  return array(
    'administer amcr ' => array(
      'title' => t('Administer Adobe marketing cloud reports'),
    ),
  );
}


/**
 * Implements hook_theme().
 */
function amcr_theme() {
  return array(
    'amcr_element_form' => array(
      'render element' => 'form',
      'file' => 'amcr.admin.inc',
    ),
    'amcr_metric_form' => array(
      'render element' => 'form',
      'file' => 'amcr.admin.inc',
    ),
  );
}



/**
 * Loads a report config.
 *
 * @param $id
 *   The report id.
 *
 * @return
 *   A report config object.
 */
function amcr_report_load($id) {
  $reports = &drupal_static(__FUNCTION__);
  if (!isset($reports[$id])) {
    $report_config = new AmcrReportConfig(NULL);
    $report_config->load($id);
    $reports[$id] = $report_config;
  }
  return $reports[$id];
}

/**
 * Implements hook_cron().
 */
function amcr_cron() {
  $result = db_query('SELECT * FROM {amcr_report_description} WHERE last_update + update_frequency < :time',
    array(':time' => REQUEST_TIME));

  $queue = DrupalQueue::get('amcr_reports');
  foreach ($result as $report) {
    $queue->createItem($report->id);
  }
}

/**
 * Implements hook_cron_queue_info().
 */
function amcr_cron_queue_info() {
  $queues['amcr_reports'] = array(
    'worker callback' => '_amcr_update_report',
    'time' => 120,
  );
  return $queues;
}

/**
 * Callback for hook_cron_queue_info
 * updates report
 *
 * @param $rd_id int
 *  Primary keq of amcr_report_description table (config id)
 */
function _amcr_update_report($rd_id) {
  try {
    $report_config = new AmcrReportConfig($rd_id);
    $data_source = new AmcrReport($report_config);
    $data_source->getData();
    $data_source->save();
    db_update('{amcr_report_description}')
      ->condition('id', $rd_id)
      ->fields(array('last_update' => time()))
      ->execute();
    watchdog('amcr', 'report ' . $report_config->name . ' updated', array(), WATCHDOG_INFO);
  }
  catch (Exception $e) {
    watchdog_exception('amcr', $e);
  }
}
